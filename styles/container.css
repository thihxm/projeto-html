.container {
    /* user settings */
    --padding-inline: 1.5rem;
    --content-max-width: 60rem;
    --narrow-size-reduction: 60px;
    --popout-extra-distance: 60px;
    --breakout-extra-distance: 120px;

    /* for calculations */
    --_narrow-column-size: calc(
        (var(--content-max-width) - var(--narrow-size-reduction)) / 2
    );
    --_content-column-size: var(--narrow-size-reduction);
    --_breakout-column-size: calc(
        var(--breakout-extra-distance) - var(--popout-extra-distance)
    );

    display: grid;
    grid-template-columns:
        [full-width-start] minmax(var(--padding-inline), 1fr)
        [breakout-start] minmax(0, var(--_breakout-column-size))
        [popout-start] minmax(0, var(--popout-extra-distance))
        [content-start] minmax(0, var(--_content-column-size))
        [narrow-start]
        min(50% - var(--padding-inline), var(--_narrow-column-size))
        [center-line]
        min(50% - var(--padding-inline), var(--_narrow-column-size))
        [narrow-end]
        minmax(0, var(--_content-column-size))
        [content-end]
        minmax(0, var(--popout-extra-distance)) [popout-end]
        minmax(0, var(--_breakout-column-size)) [breakout-end]
        minmax(var(--padding-inline), 1fr) [full-width-end];
    grid-auto-rows: min-content;
}

:is(.container, .full-width) > * {
    grid-column: content;
}

:is(.container, .full-width) > .narrow {
    grid-column: narrow;
}

:is(.container, .full-width) > .narrow-left-only {
    grid-column: narrow-start / content-end;
}

:is(.container, .full-width) > .narrow-right-only {
    grid-column: content-start / narrow-end;
}

:is(.container, .full-width) > .popout {
    grid-column: popout;
}

:is(.container, .full-width) > .popout-left-only {
    grid-column: popout-start / content-end;
}

:is(.container, .full-width) > .popout-right-only {
    grid-column: content-start / popout-end;
}

:is(.container, .full-width) > .breakout {
    grid-column: breakout;
}

:is(.container, .full-width) > .breakout-left-only {
    grid-column: breakout-start / content-end;
}

:is(.container, .full-width) > .breakout-right-only {
    grid-column: content-start / popout-end;
}

:is(.container, .full-width) > .full-width {
    display: grid;
    grid-template-columns: inherit;
    grid-column: full-width;
}

:is(.container, .full-width) > .full-width-left-only {
    grid-column: full-width-start / content-end;
}

:is(.container, .full-width) > .full-width-right-only {
    grid-column: content-start / full-width-end;
}

.container .full-width-content-split,
.container .full-width-popout-split,
.container .full-width-narrow-split,
.container .full-width-breakout-split {
    grid-column: full-width;
    display: grid;
    grid-template-columns: inherit;
}

.container .full-width-content-split > :is(:first-child, :last-child),
.container .full-width-popout-split > :is(:first-child, :last-child),
.container .full-width-narrow-split > :is(:first-child, :last-child),
.container .full-width-breakout-split > :is(:first-child, :last-child) {
    display: grid;
    grid-template-columns: subgrid;
    align-content: center;
}

.container .full-width-content-split > :where(:first-child),
.container .full-width-popout-split > :where(:first-child),
.container .full-width-narrow-split > :where(:first-child),
.container .full-width-breakout-split > :where(:first-child) {
    grid-column: full-width-start / center-line;
    padding-right: 2rem;
}

.container .full-width-content-split > :where(:first-child) > *,
.container .full-width-popout-split > :where(:first-child) > *,
.container .full-width-narrow-split > :where(:first-child) > *,
.container .full-width-breakout-split > :where(:first-child) > * {
    grid-column: var(--_size, content) / center-line;
}

.container .full-width-content-split > :where(:last-child),
.container .full-width-popout-split > :where(:last-child),
.container .full-width-narrow-split > :where(:last-child),
.container .full-width-breakout-split > :where(:last-child) {
    grid-column: center-line / full-width-end;
    padding-left: 2rem;
}

.container .full-width-content-split > :where(:last-child) > *,
.container .full-width-popout-split > :where(:last-child) > *,
.container .full-width-narrow-split > :where(:last-child) > *,
.container .full-width-breakout-split > :where(:last-child) > * {
    grid-column: center-line / var(--_size);
}

.container .full-width-content-split {
    --_size: content;
}

.container .full-width-narrow-split {
    --_size: narrow;
}

.container .full-width-popout-split {
    --_size: popout;
}

.container .full-width-content-split {
    --_size: content;
}

.container .full-width-breakout-split {
    --_size: breakout;
}

.container .full-half {
    padding: 0;
}

.container .full-half > * {
    grid-column: 1 / -1;
}

.container .page-title {
    font-size: var(--fs-900);
    line-height: 1.05;
    text-transform: uppercase;
}

.container .section-title {
    font-size: var(--fs-800);
    line-height: 1.1;
}

.container .slider-container {
    overflow-x: scroll;
}

.container .slider {
    grid-column: content;

    display: grid;
    gap: 1rem;
    grid-auto-flow: column;
    grid-auto-columns: 400px;

    width: max-content;
    /* (100vw - widthToMatch) / 2 */
    padding-right: max(
        ((100vw - var(--_slider-size, 0)) / 2) - (var(--padding-inline) * 2),
        1rem
    );
}

.container .slider-container.full-width .slider {
    --_slider-size: var(--content-max-width);
}

.container .slider-container.full-width .slider.popout {
    --_slider-size: calc(
        var(--content-max-width) + (var(--popout-extra-distance) * 2)
    );
}

.container .slider-container.full-width .slider.breakout {
    --_slider-size: calc(
        var(--content-max-width) + (var(--breakout-extra-distance) * 2)
    );
}

.container .slider > * {
    padding: 3rem;
    background: red;
}
